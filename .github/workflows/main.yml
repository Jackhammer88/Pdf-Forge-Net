name: Build and Package

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu

      # Установка .NET SDK для использования dotnet CLI
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.401'

      - name: Install Dependencies (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config libpoppler-glib-dev libcairo2-dev libglib2.0-dev

      - name: Build for Linux
        run: |
          cd PdfForge.Rust
          rustup target add x86_64-unknown-linux-gnu
          export RUSTFLAGS="-L /usr/lib/x86_64-linux-gnu -lpoppler-glib -lcairo -lglib-2.0 -lgobject-2.0"
          cargo build --release --target=x86_64-unknown-linux-gnu

      - name: Copy .so libs and Pack the NuGet package
        run: |
          mkdir -p PdfForge/runtimes/linux-x64/native
          cd PdfForge.Rust/target/x86_64-unknown-linux-gnu
          ldd release/libpdf_forge.so | grep "=> /" | awk '{print $3}' | grep -E "(poppler|cairo|glib|gobject|gio|jpeg|tiff|openjp2|lcms2|nss)" | xargs -I '{}' cp -v '{}' ../../../PdfForge/runtimes/linux-x64/native/
          cp release/libpdf_forge.so ../../../PdfForge/runtimes/linux-x64/native/

      - name: Pack PdfForge NuGet package
        run: |
          cd PdfForge
          dotnet pack --runtime linux-x64 --configuration Release --output ./nupkgs -p:NuspecFile=./PdfForge.nuspec
      
      - name: Pack PdfForge.Avalonia NuGet package
        run: |
          cd PdfForge.Avalonia
          dotnet pack --runtime linux-x64 --configuration Release --output ./nupkgs -p:NuspecFile=./PdfForge.Avalonia.nuspec

      - name: Upload NuGet package
        uses: actions/upload-artifact@v3
        with:
          name: PdfForge-nuget-packages
          path: '**/nupkgs/*.nupkg'

      - name: Publish PdfForge to NuGet.org
        run: |
          dotnet nuget push PdfForge/nupkgs/PdfForge.[0-9]*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

      - name: Publish PdfForge.Avalonia to NuGet.org
        run: |
          dotnet nuget push PdfForge.Avalonia/nupkgs/PdfForge.Avalonia.[0-9]*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
