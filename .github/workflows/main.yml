name: Build and Package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Install Dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config libpoppler-glib-dev libcairo2-dev libglib2.0-dev

      - name: Build for Linux
        if: runner.os == 'Linux'
        run: |
          rustup target add x86_64-unknown-linux-gnu
          export RUSTFLAGS="-L /usr/lib/x86_64-linux-gnu -lpoppler-glib -lcairo -lglib-2.0 -lgobject-2.0"
          cargo build --release --target=x86_64-unknown-linux-gnu

      - name: Build for Windows
        if: runner.os == 'Windows'
        run: |
          rustup target add x86_64-pc-windows-gnu
          export RUSTFLAGS="-L /usr/lib/x86_64-linux-gnu -lpoppler-glib -lcairo -lglib-2.0 -lgobject-2.0"
          cargo build --release --target=x86_64-pc-windows-gnu

      - name: Upload build artifacts for Linux
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v3
        with:
          name: linux-binaries
          path: target/x86_64-unknown-linux-gnu/release/

      - name: Upload build artifacts for Windows
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v3
        with:
          name: windows-binaries
          path: target/x86_64-pc-windows-gnu/release/
